"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RPC = void 0;
var RPC;
(function (RPC) {
    /**
     * RPC-related types. Request messages, response messages, and dependant types.
     *
     * Clients are expected to build RequestMessages and wrap them in KaspadMessage. (see messages.proto)
     *
     * Having received a RequestMessage, (wrapped in a KaspadMessage) the RPC server will respond with a
     * ResponseMessage (likewise wrapped in a KaspadMessage) respective to the original RequestMessage.
     *
     * **IMPORTANT:** This API is a work in progress and is subject to break between versions.
     */
    let SubmitBlockResponseMessage_RejectReason;
    (function (SubmitBlockResponseMessage_RejectReason) {
        SubmitBlockResponseMessage_RejectReason[SubmitBlockResponseMessage_RejectReason["NONE"] = 0] = "NONE";
        SubmitBlockResponseMessage_RejectReason[SubmitBlockResponseMessage_RejectReason["BLOCK_INVALID"] = 1] = "BLOCK_INVALID";
        SubmitBlockResponseMessage_RejectReason[SubmitBlockResponseMessage_RejectReason["IS_IN_IBD"] = 2] = "IS_IN_IBD";
        SubmitBlockResponseMessage_RejectReason[SubmitBlockResponseMessage_RejectReason["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
    })(SubmitBlockResponseMessage_RejectReason = RPC.SubmitBlockResponseMessage_RejectReason || (RPC.SubmitBlockResponseMessage_RejectReason = {}));
})(RPC = exports.RPC || (exports.RPC = {}));
